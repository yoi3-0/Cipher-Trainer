{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"names":["createContext","Appearance","Scheme","WebviewType","ConfigProviderContext"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAOZ,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAcZ,OAAO,IAAMC,qBAAqB,GAAGJ,aAAa,CAAiC,EAAjC,CAA3C","sourcesContent":["import { createContext } from 'react';\nimport { AppearanceSchemeType, AppearanceType } from '@vkontakte/vk-bridge';\n\nexport enum Appearance {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nexport enum Scheme {\n  DEPRECATED_CLIENT_LIGHT = 'client_light',\n  DEPRECATED_CLIENT_DARK = 'client_dark',\n  BRIGHT_LIGHT = 'bright_light',\n  SPACE_GRAY = 'space_gray',\n}\n\nexport enum WebviewType {\n  VKAPPS = 'vkapps',\n  INTERNAL = 'internal',\n}\n\nexport interface ConfigProviderContextInterface {\n  scheme?: AppearanceSchemeType;\n  isWebView?: boolean;\n  webviewType?: WebviewType.INTERNAL | WebviewType.VKAPPS;\n  app?: string;\n  appearance?: AppearanceType;\n  transitionMotionEnabled?: boolean;\n}\n\nexport const ConfigProviderContext = createContext<ConfigProviderContextInterface>({});\n"],"file":"ConfigProviderContext.js"}
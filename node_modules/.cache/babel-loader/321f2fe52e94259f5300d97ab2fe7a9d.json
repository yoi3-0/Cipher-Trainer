{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { ANDROID } from '../../lib/platform';\nimport transitionEvents from '../../lib/transitionEvents';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nvar PopoutWrapper = /*#__PURE__*/function (_Component) {\n  _inherits(PopoutWrapper, _Component);\n\n  var _super = _createSuper(PopoutWrapper);\n\n  function PopoutWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, PopoutWrapper);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"elRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFinishTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onFadeInEnd\", function (e) {\n      if (!e || e.animationName === 'animation-full-fade-in') {\n        _this.setState({\n          opened: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (e) {\n      return e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (e) {\n      if (_this.state.opened && _this.props.onClick) {\n        _this.props.onClick(e);\n      }\n    });\n\n    _this.state = {\n      opened: false\n    };\n    _this.elRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(PopoutWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM) {\n        window.addEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n        this.waitAnimationFinish(this.elRef.current, this.onFadeInEnd);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      if (canUseDOM) {\n        // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n        window.removeEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n        window.clearTimeout(this.animationFinishTimeout);\n      }\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(elem, eventHandler) {\n      if (transitionEvents.supported) {\n        var eventName = transitionEvents.prefix ? transitionEvents.prefix + 'AnimationEnd' : 'animationend';\n        elem.removeEventListener(eventName, eventHandler);\n        elem.addEventListener(eventName, eventHandler);\n      } else {\n        var platform = this.props.platform;\n        this.animationFinishTimeout = window.setTimeout(eventHandler, platform === ANDROID ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          alignY = _this$props.alignY,\n          alignX = _this$props.alignX,\n          closing = _this$props.closing,\n          children = _this$props.children,\n          hasMask = _this$props.hasMask,\n          onClick = _this$props.onClick,\n          className = _this$props.className,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"alignY\", \"alignX\", \"closing\", \"children\", \"hasMask\", \"onClick\", \"className\", \"platform\"]);\n\n      var baseClassNames = getClassName('PopoutWrapper', platform);\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(baseClassNames, \"PopoutWrapper--v-\".concat(alignY), \"PopoutWrapper--h-\".concat(alignX), {\n          'PopoutWrapper--closing': closing\n        }, className),\n        onClick: this.onClick,\n        ref: this.elRef\n      }), hasMask && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PopoutWrapper__mask\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PopoutWrapper__container\"\n      }, children));\n    }\n  }]);\n\n  return PopoutWrapper;\n}(Component);\n\n_defineProperty(PopoutWrapper, \"defaultProps\", {\n  hasMask: true,\n  alignY: 'center',\n  alignX: 'center',\n  closing: false\n});\n\nexport default withPlatform(PopoutWrapper);","map":null,"metadata":{},"sourceType":"module"}
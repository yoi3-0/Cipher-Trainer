{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport withModalRootContext from '../ModalRoot/withModalRootContext';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar ModalPage = /*#__PURE__*/function (_Component) {\n  _inherits(ModalPage, _Component);\n\n  var _super = _createSuper(ModalPage);\n\n  function ModalPage() {\n    _classCallCheck(this, ModalPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ModalPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.children !== this.props.children) {\n        this.props.updateModalHeight();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          header = _this$props.header,\n          insets = _this$props.insets,\n          platform = _this$props.platform;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(getClassName('ModalPage', platform), className)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__in-wrap\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__in\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__header\"\n      }, header), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__content-in\",\n        style: isNumeric(insets.bottom) ? {\n          paddingBottom: insets.bottom\n        } : null\n      }, children)))));\n    }\n  }]);\n\n  return ModalPage;\n}(Component);\n\n_defineProperty(ModalPage, \"defaultProps\", {\n  settlingHeight: 75,\n  insets: {}\n});\n\nexport default withInsets(withPlatform(withModalRootContext(ModalPage)));","map":null,"metadata":{},"sourceType":"module"}
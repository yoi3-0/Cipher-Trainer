{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { ANDROID } from '../../lib/platform';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport { PanelContext } from '../Panel/PanelContext';\n\nvar PanelHeader = function PanelHeader(_ref) {\n  var className = _ref.className,\n      left = _ref.left,\n      addon = _ref.addon,\n      children = _ref.children,\n      right = _ref.right,\n      separator = _ref.separator,\n      visor = _ref.visor,\n      transparent = _ref.transparent,\n      getRef = _ref.getRef,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"left\", \"addon\", \"children\", \"right\", \"separator\", \"visor\", \"transparent\", \"getRef\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n\n  var _useContext = useContext(ConfigProviderContext),\n      webviewType = _useContext.webviewType;\n\n  var panelContext = useContext(PanelContext);\n  var needSeparator = separator;\n\n  if (typeof separator !== 'boolean') {\n    needSeparator = panelContext.separator;\n  }\n\n  var isPrimitive = typeof children === 'string' || typeof children === 'number';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(getClassname('PanelHeader', platform), {\n      'PanelHeader--trnsp': transparent,\n      'PanelHeader--vis': visor,\n      'PanelHeader--sep': needSeparator && visor,\n      'PanelHeader--vkapps': webviewType === WebviewType.VKAPPS,\n      'PanelHeader--no-left': left === undefined,\n      'PanelHeader--no-right': right === undefined\n    }, className),\n    ref: getRootRef\n  }), /*#__PURE__*/React.createElement(FixedLayout, {\n    vertical: \"top\",\n    className: \"PanelHeader__fixed\",\n    getRootRef: getRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeader__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeader__left\"\n  }, left, platform !== ANDROID && addon), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeader__content\"\n  }, isPrimitive ? /*#__PURE__*/React.createElement(\"span\", null, children) : children), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeader__right\"\n  }, webviewType !== WebviewType.VKAPPS && right))), needSeparator && visor && /*#__PURE__*/React.createElement(Separator, {\n    className: \"PanelHeader__separator\"\n  }));\n};\n\nPanelHeader.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true\n};\nexport default PanelHeader;","map":null,"metadata":{},"sourceType":"module"}
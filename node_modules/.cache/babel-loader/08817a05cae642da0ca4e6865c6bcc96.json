{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport Touch from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY } from '../../lib/touch';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar ts = function ts() {\n  return +Date.now();\n};\n\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar storage = {};\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\n\nfunction deactivateOtherInstances(exclude) {\n  Object.keys(storage).filter(function (id) {\n    return id !== exclude;\n  }).forEach(function (id) {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n    delete storage[id];\n  });\n}\n\nvar Tappable = /*#__PURE__*/function (_Component) {\n  _inherits(Tappable, _Component);\n\n  var _super = _createSuper(Tappable);\n\n  function Tappable(props) {\n    var _this;\n\n    _classCallCheck(this, Tappable);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isSlide\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"insideTouchRoot\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"wavesTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (_ref) {\n      var originalEvent = _ref.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        deactivateOtherInstances();\n        return;\n      }\n\n      if (_this.props.platform === ANDROID) {\n        _this.onDown(originalEvent);\n      }\n\n      storage[_this.id] = {\n        stop: _this.stop,\n        activeTimeout: window.setTimeout(_this.start, ACTIVE_DELAY)\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (_ref2) {\n      var originalEvent = _ref2.originalEvent,\n          shiftXAbs = _ref2.shiftXAbs,\n          shiftYAbs = _ref2.shiftYAbs;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (shiftXAbs > 20 || shiftYAbs > 20) {\n        _this.isSlide = true;\n\n        _this.stop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (_ref3) {\n      var originalEvent = _ref3.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n      var now = ts();\n\n      if (originalEvent.touches && originalEvent.touches.length > 0) {\n        _this.isSlide = false;\n        return;\n      }\n\n      if (_this.state.active) {\n        if (now - _this.state.ts >= 100) {\n          // Долгий тап, выключаем подсветку\n          _this.stop();\n        } else {\n          // Короткий тап, оставляем подсветку\n          var timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay - now + _this.state.ts);\n\n          var store = _this.getStorage();\n\n          if (store) {\n            store.timeout = timeout;\n          }\n        }\n      } else if (!_this.isSlide) {\n        // Очень короткий тап, включаем подсветку\n        _this.start();\n\n        var _timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay);\n\n        if (_this.getStorage()) {\n          clearTimeout(_this.getStorage().activeTimeout);\n          _this.getStorage().timeout = _timeout;\n        } else {\n          _this.timeout = _timeout;\n        }\n      }\n\n      _this.isSlide = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDown\", function (e) {\n      if (_this.props.platform === ANDROID) {\n        var _getOffsetRect = getOffsetRect(_this.container),\n            top = _getOffsetRect.top,\n            left = _getOffsetRect.left;\n\n        var x = coordX(e) - left;\n        var y = coordY(e) - top;\n        var key = 'wave' + Date.now().toString();\n\n        _this.setState(function (state) {\n          return {\n            clicks: _objectSpread({}, state.clicks, _defineProperty({}, key, {\n              x: x,\n              y: y\n            }))\n          };\n        });\n\n        _this.wavesTimeout = window.setTimeout(function () {\n          _this.setState(function (state) {\n            var clicks = _objectSpread({}, state.clicks);\n\n            delete clicks[key];\n            return {\n              clicks: clicks\n            };\n          });\n        }, 225);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      if (!_this.state.active) {\n        _this.setState({\n          active: true,\n          ts: ts()\n        });\n      }\n\n      deactivateOtherInstances(_this.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (_this.state.active) {\n        _this.setState({\n          active: false,\n          ts: null\n        });\n      }\n\n      if (_this.getStorage()) {\n        clearTimeout(_this.getStorage().activeTimeout);\n        delete storage[_this.id];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStorage\", function () {\n      return storage[_this.id];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    _this.id = Math.round(Math.random() * 1e8).toString(16);\n    _this.state = {\n      clicks: {},\n      active: false,\n      ts: null\n    };\n    _this.isSlide = false;\n    return _this;\n  }\n\n  _createClass(Tappable, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (storage[this.id]) {\n        clearTimeout(storage[this.id].timeout);\n        clearTimeout(storage[this.id].activeTimeout);\n        delete storage[this.id];\n      }\n\n      clearTimeout(this.wavesTimeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          clicks = _this$state.clicks,\n          active = _this$state.active;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          Component = _this$props.Component,\n          activeEffectDelay = _this$props.activeEffectDelay,\n          stopPropagation = _this$props.stopPropagation,\n          getRootRef = _this$props.getRootRef,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"Component\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"platform\"]);\n\n      var classes = classNames(getClassName('Tappable', platform), className, {\n        'Tappable--active': active,\n        'Tappable--inactive': !active\n      });\n      var RootComponent = !restProps.disabled ? Touch : Component;\n      var props = {};\n\n      if (!restProps.disabled) {\n        props.Component = Component;\n        /* eslint-disable */\n\n        props.onStart = this.onStart;\n        props.onMove = this.onMove;\n        props.onEnd = this.onEnd;\n        /* eslint-enable */\n\n        props.getRootRef = this.getRef;\n      } else {\n        props.ref = this.getRef;\n      }\n\n      return /*#__PURE__*/React.createElement(TouchRootContext.Consumer, null, function (insideTouchRoot) {\n        _this2.insideTouchRoot = insideTouchRoot;\n        return /*#__PURE__*/React.createElement(RootComponent, _extends({}, restProps, {\n          className: classes\n        }, props), platform === ANDROID && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"Tappable__waves\"\n        }, Object.keys(clicks).map(function (k) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"Tappable__wave\",\n            style: {\n              top: clicks[k].y,\n              left: clicks[k].x\n            },\n            key: k\n          });\n        })), children);\n      });\n    }\n  }]);\n\n  return Tappable;\n}(Component);\n\n_defineProperty(Tappable, \"defaultProps\", {\n  Component: 'div',\n  role: 'button',\n  stopPropagation: false,\n  disabled: false,\n  activeEffectDelay: ACTIVE_EFFECT_DELAY\n});\n\nexport default withPlatform(Tappable);","map":null,"metadata":{},"sourceType":"module"}
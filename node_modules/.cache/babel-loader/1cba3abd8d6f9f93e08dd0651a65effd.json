{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../lib/dom';\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nvar baseClassName = getClassName('Tooltip');\n\nvar TooltipPortal = /*#__PURE__*/function (_Component) {\n  _inherits(TooltipPortal, _Component);\n\n  var _super = _createSuper(TooltipPortal);\n\n  function TooltipPortal(props) {\n    var _this;\n\n    _classCallCheck(this, TooltipPortal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fixedPortal\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"el\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"portalTarget\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getBoundingTargetRect\", function () {\n      var target = _this.props.target;\n      var targetBounds = target.getBoundingClientRect();\n\n      var portalBounds = _this.portalTarget.getBoundingClientRect();\n\n      return {\n        width: targetBounds.width,\n        height: targetBounds.height,\n        x: targetBounds.left - portalBounds.left,\n        y: targetBounds.top - portalBounds.top\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (el) {\n      return _this.el = el;\n    });\n\n    _this.state = {\n      x: 0,\n      y: 0\n    };\n    _this.fixedPortal = false;\n    var _target = props.target;\n\n    var closestFixed = _target.closest('.FixedLayout');\n\n    var closestHeader = _target.closest('.PanelHeader__in');\n\n    var closestPanel = _target.closest('.Panel__in');\n\n    if (closestFixed || closestHeader) {\n      _this.fixedPortal = true;\n    }\n\n    _this.portalTarget = closestFixed || closestHeader || closestPanel;\n    return _this;\n  }\n\n  _createClass(TooltipPortal, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.document.removeEventListener('click', this.props.onClose);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          offsetY = _this$props.offsetY,\n          offsetX = _this$props.offsetX,\n          alignX = _this$props.alignX,\n          alignY = _this$props.alignY;\n      var coords = this.getBoundingTargetRect();\n      this.document.addEventListener('click', this.props.onClose);\n      this.setState({\n        x: coords.x + offsetX + (alignX === 'right' ? coords.width - this.el.offsetWidth : 0),\n        y: coords.y + (alignY === 'top' ? -this.el.offsetHeight - offsetY : coords.height + offsetY)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          header = _this$props2.header,\n          text = _this$props2.text,\n          alignX = _this$props2.alignX,\n          alignY = _this$props2.alignY,\n          cornerOffset = _this$props2.cornerOffset;\n      return ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(baseClassName, \"Tooltip--x-\".concat(alignX), \"Tooltip--y-\".concat(alignY), {\n          'Tooltip--fixed': this.fixedPortal\n        })\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tooltip__container\",\n        style: {\n          top: this.state.y,\n          left: this.state.x\n        },\n        ref: this.getRef\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tooltip__corner\",\n        style: _defineProperty({}, alignX, 20 + cornerOffset)\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tooltip__content\"\n      }, header && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tooltip__title\"\n      }, header), text && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tooltip__text\"\n      }, text)))), this.portalTarget);\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }]);\n\n  return TooltipPortal;\n}(Component);\n\n_defineProperty(TooltipPortal, \"contextTypes\", {\n  document: PropTypes.object,\n  panel: PropTypes.string\n});\n\nvar Tooltip = /*#__PURE__*/function (_Component2) {\n  _inherits(Tooltip, _Component2);\n\n  var _super2 = _createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this2;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      ready: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"targetEl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"getRef\", function (el) {\n      return _this2.targetEl = el;\n    });\n\n    return _this2;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM) {\n        this.targetEl && this.setState({\n          ready: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          isShown = _this$props3.isShown,\n          portalProps = _objectWithoutProperties(_this$props3, [\"children\", \"isShown\"]);\n\n      var child = React.cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', this.getRef));\n\n      if (!isShown || !this.state.ready) {\n        return child;\n      }\n\n      return /*#__PURE__*/React.createElement(Fragment, null, child, /*#__PURE__*/React.createElement(TooltipPortal, _extends({}, portalProps, {\n        target: this.targetEl\n      })));\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\n_defineProperty(Tooltip, \"defaultProps\", {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true\n});\n\nexport { Tooltip as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n * Получает кординату по оси абсцисс из touch- или mouse-события\n */\nvar coordX = function coordX(e) {\n  return e.clientX || e.changedTouches && e.changedTouches[0].clientX;\n};\n/*\n * Получает кординату по оси ординат из touch- или mouse-события\n */\n\n\nvar coordY = function coordY(e) {\n  return e.clientY || e.changedTouches && e.changedTouches[0].clientY;\n};\n\nvar isClient = typeof window !== 'undefined';\nvar touchEnabled = isClient && 'ontouchstart' in window;\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\nfunction getSupportedEvents() {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  var offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":null,"metadata":{},"sourceType":"module"}